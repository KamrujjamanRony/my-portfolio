[
  {
    "id": 1,
    "img": "https://i.ibb.co/XkDHFj3/yes-it-thumb.png",
    "img1": "https://i.ibb.co/5K441s6/yes-it-home.png",
    "img2": "https://i.ibb.co/DLgmxd3/yes-it-portfolio.png",
    "img3": "https://i.ibb.co/ck31TMS/yes-it-service.png",
    "img4": "https://i.ibb.co/X33Swmm/yes-it-about.png",
    "img5": "https://i.ibb.co/MgHgSQ0/yes-it-blog.png",
    "name": "Yes IT Ltd.",
    "description": "Yes IT is one of the fastest growing and forward thinking IT solution companies in Bangladesh, delivering outstanding software outsourcing services to clients in EU (Denmark, Norway, Germany, Sweden), North America and Japan since 2023. We have a successful track record in serving our customers across the globe with vast experience in technical domain such as ASP .Net, C#, Java, PHP, iOS, Android. We have global presence in different time zones. We use latest technology and software for Web, e-commerce, Mobile Technology and Print Media.",
    "details": [
      {
        "step": "For UI design, I use React-router-dom, Tailwind CSS, Daisy UI, Vanilla CSS, Daisy UI icons."
      },
      {
        "step": "For authentication, password rest and email verified I use Firebase authentication and React-firebase-hooks. Also use react-firebase-hooks for get logged in users information such as display name, email etc. I also use Firebase hosting for client side hosting. I also use React-form and html form."
      },
      {
        "step": "In this project I use React-router for Routing. And I also use dynamic routing. I create a dashboard with nested-route."
      },
      {
        "step": "Also use react-toastify for toast, use axios for fetching data server side to client side and client side to server side, use heroku for hosting server side."
      },
      {
        "step": "I use stripe to make payment method. I have added the method of pay with Master Card, Debit Card, Transaction id etc."
      }
    ],
    "githubClient": "https://github.com/KamrujjamanRony/yetIt-client",
    "link": "https://yes-it.netlify.app/",
    "tools": [
      "React",
      "Redux",
      "TailwindCSS",
      "DaisyUI",
      "React Router",
      "Firebase",
      "React Firebase Hooks",
      "Node.js",
      "MongoDB",
      "Express",
      "React toastify",
      "Stripe",
      "JWT token"
    ]
  },
  {
    "id": 2,
    "img": "https://i.ibb.co/3BjvvD1/sura-0.png",
    "img1": "https://i.ibb.co/G7F2Qc1/sura-1.png",
    "img2": "https://i.ibb.co/brFPwN1/sura-2.png",
    "img3": "https://i.ibb.co/Q96Xgwg/sura-3.png",
    "name": "Sura Tools",
    "description": "Sura Tools website is a parts or tools of many kind of products based website. It's a kind of shop management system. Here user can sign in freely with user email account and can create their own profile. User can see all product's details, User also know about the new arrival products, can order the products as their needs, also can cancel their order and can payment as of their desired orders. User can see inventory items and new arrival items. Also user will see the company policy, services, new arrivals products's offers, company features, Testimonials of the Clients reviews, clients can add their review, and the Business summary of ToolKits Ltd. On the other hand, Admin panel can also Visit and update their profile. Admin will see all the orders, they can manage the orders, and they can also make someone a admin.",
    "details": [
      {
        "step": "For UI design, I use React-router-dom, Tailwind CSS, Daisy UI, Vanilla CSS, Daisy UI icons."
      },
      {
        "step": "For authentication, password rest and email verified I use Firebase authentication and React-firebase-hooks. Also use react-firebase-hooks for get logged in users information such as display name, email etc. I also use Firebase hosting for client side hosting. I also use React-form and html form."
      },
      {
        "step": "In this project I use React-router for Routing. And I also use dynamic routing. I create a dashboard with nested-route."
      },
      {
        "step": "Also use react-toastify for toast, use axios for fetching data server side to client side and client side to server side, use heroku for hosting server side."
      },
      {
        "step": "I use stripe to make payment method. I have added the method of pay with Master Card, Debit Card, Transaction id etc."
      }
    ],
    "githubClient": "https://github.com/KamrujjamanRony/sura-tools-clientside",
    "githubServer": "https://github.com/KamrujjamanRony/sura-tools-serverside",
    "link": "https://sura-tools.web.app/",
    "tools": [
      "React",
      "TailwindCSS",
      "DaisyUI",
      "React Router",
      "Firebase",
      "React Firebase Hooks",
      "Node.js",
      "MongoDB",
      "Express",
      "React toastify",
      "Stripe",
      "JWT token"
    ]
  },
  {
    "id": 3,
    "img": "https://i.ibb.co/K6pRqbc/street-0.png",
    "img1": "https://i.ibb.co/qYfj6Cv/street-1.png",
    "img2": "https://i.ibb.co/mvzTCpD/street-2.png",
    "img3": "https://i.ibb.co/1XMjD4g/street-3.png",
    "name": "Street Smartz",
    "description": "Street Smartz website is a inventory management base website. Here user can sign in freely with user email account. User can see inventory items and new arrival items. Also user can add new inventory item that can show in inventory items section. Also user can manage those inventory items on manage inventory page.Such as delivery items and restock items. Here also an extra Manage Inventories button that can take users to the manage inventory page. In this manage inventory page user can show all inventory items with delete button. Here user can delete any inventory items. There are also my items route that the logged-in user can see only his/her added items. Here also user can delete his/her inventory items.",
    "details": [
      {
        "step": "---For UI design, i use react-bootstrap, bootstrap 5 and vanilla CSS and react-fontawesome. Here user stock electronic items, delivered items, add new item and manage those items."
      },
      {
        "step": "For authentication, password rest and email verified i use firebase authentication and react-firebase-hooks. Also use react-firebase-hooks for get logged in users information such as display name, email etc. i also use firebase hosting for client side hosting."
      },
      {
        "step": "In this project i use react-router for routing. And I also use dynamic routing."
      },
      {
        "step": "Also use react-toastify for toast, use axios for fetching data server side to client side and client side to server side, use heroku for hosting server side."
      },
      {
        "step": "I use mongoDB for store data in server side. Here i create some api for store inventory items detail, add new inventory item, update items quantity, store user email, delete inventory item, load all inventory items in client side."
      }
    ],
    "githubClient": "https://github.com/KamrujjamanRony/street-smartz-client",
    "githubServer": "https://github.com/KamrujjamanRony/street-smartz-server",
    "link": "https://street-smartz.web.app/",
    "tools": [
      "React",
      "React Bootstrap",
      "React Firebase Hooks",
      "React Router",
      "Firebase",
      "Node.js",
      "MongoDB",
      "Express",
      "React toastify",
      "JWT token"
    ]
  },
  {
    "id": 4,
    "img": "https://i.ibb.co/7X0KVXh/toolkits.jpg",
    "img1": "https://i.ibb.co/khn2vsy/toolkits-1.png",
    "img2": "https://i.ibb.co/qMsPXqF/toolkits-2.png",
    "img3": "https://i.ibb.co/P6QRMNc/toolkits-3.png",
    "name": "ToolKits",
    "description": "ToolKits website is a parts or tools of many kind of products based website. It's a kind of shop management system. Here user can sign in freely with user email account and can create their own profile. User can see all product's details, User also know about the new arrival products, can order the products as their needs, also can cancel their order and can payment as of their desired orders. User can see inventory items and new arrival items. Also user will see the company policy, services, new arrivals products's offers, company features, Testimonials of the Clients reviews, clients can add their review, and the Business summary of ToolKits Ltd. On the other hand, Admin panel can also Visit and update their profile. Admin will see all the orders, they can manage the orders, and they can also make someone a admin.",
    "details": [
      {
        "step": "For UI design, I use React-router-dom, Tailwind CSS, Daisy UI, Vanilla CSS, Daisy UI icons."
      },
      {
        "step": "For authentication, password rest and email verified I use Firebase authentication and React-firebase-hooks. Also use react-firebase-hooks for get logged in users information such as display name, email etc. I also use Firebase hosting for client side hosting. I also use React-form and html form."
      },
      {
        "step": "In this project I use React-router for Routing. And I also use dynamic routing. I create a dashboard with nested-route."
      },
      {
        "step": "Also use react-toastify for toast, use axios for fetching data server side to client side and client side to server side, use heroku for hosting server side."
      },
      {
        "step": "I use stripe to make payment method. I have added the method of pay with Master Card, Debit Card, Transaction id etc."
      }
    ],
    "githubClient": "https://github.com/KamrujjamanRony/toolkits-client",
    "githubServer": "https://github.com/KamrujjamanRony/toolkits-server",
    "link": " https://toolkits-c33e4.web.app/",
    "tools": [
      "React",
      "TailwindCSS",
      "DaisyUI",
      "React Router",
      "Firebase",
      "React Firebase Hooks",
      "Node.js",
      "MongoDB",
      "Express",
      "React toastify",
      "Stripe",
      "JWT token"
    ]
  }
]
